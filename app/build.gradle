apply plugin: 'com.android.application'
apply plugin: 'io.fabric'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'

android {
    compileSdkVersion 27
    buildToolsVersion '27.0.3'
    defaultConfig {
        applicationId "com.meiji.daily"
        minSdkVersion 16
        targetSdkVersion 27
        versionCode 2
        versionName '1.45'
        multiDexEnabled true
    }
    buildTypes {
        release {
            minifyEnabled true  //设为false即可断点调试
            shrinkResources true  //自动移除不用资源
            zipAlignEnabled true
            debuggable false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            ext.enableCrashlytics = true
            applicationVariants.all { variant ->
                variant.outputs.all { output ->
                    def outputFile = output.outputFile
                    if (outputFile != null && outputFile.name.endsWith('.apk')) {
                        // 输出apk名称为daily-release-v1.0.apk
                        def fileName = "daily-release-v${defaultConfig.versionName}.apk"
                        outputFileName = fileName
                    }
                }
            }
        }
        debug {
            minifyEnabled false
            debuggable true
            // Disable fabric build ID generation for debug builds
            ext.enableCrashlytics = false
        }
    }
    productFlavors {
    }
}

dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')

    // support library
    implementation "com.android.support:appcompat-v7:${support_version}"
    implementation "com.android.support:support-v13:${support_version}"
    implementation "com.android.support:design:${support_version}"
    implementation "com.android.support:recyclerview-v7:${support_version}"
    implementation "com.android.support:cardview-v7:${support_version}"
    implementation "com.android.support:support-annotations:${support_version}"

    // implementation "com.android.support:support-v4:${support_version}"
    implementation 'com.android.support:multidex:1.0.2'
    implementation 'com.android.support.constraint:constraint-layout:1.0.2'


    // MD dialog
    implementation 'com.afollestad.material-dialogs:commons:0.9.4.4'

    // Glide
    implementation 'com.github.bumptech.glide:glide:4.4.0'
    kapt 'com.github.bumptech.glide:compiler:4.4.0'
    implementation('com.github.bumptech.glide:okhttp-integration:4.4.0') {
        exclude group: 'com.squareup.okhttp3', module: 'okhttp'
    }

    // 圆形图像
    implementation 'de.hdodenhof:circleimageview:2.1.0'

    // license dialog
    implementation 'de.psdev.licensesdialog:licensesdialog:1.8.3'

    // retrofit 2
    implementation 'com.squareup.retrofit2:retrofit:2.3.0'
    implementation 'com.squareup.retrofit2:converter-moshi:2.3.0'
    implementation 'com.squareup.retrofit2:adapter-rxjava2:2.3.0'

    // Moshi
    implementation 'com.squareup.moshi:moshi-kotlin:1.5.0'

    // 持久化 Cookie
    implementation 'com.github.franmontiel:PersistentCookieJar:v1.0.1'

    // RxJava 2
    implementation 'io.reactivex.rxjava2:rxjava:2.1.9'
    implementation 'io.reactivex.rxjava2:rxandroid:2.0.1'

    // okhttp 3
    implementation 'com.squareup.okhttp3:okhttp:3.9.1'

    //    debugImplementation 'com.squareup.okhttp3:logging-interceptor:3.9.1'

    // stetho
    debugImplementation 'com.facebook.stetho:stetho:1.5.0'

    // MultiType
    implementation 'me.drakeet.multitype:multitype:3.4.0'

    // Lifecycles
    implementation "android.arch.lifecycle:runtime:$arch_version"
    kapt "android.arch.lifecycle:compiler:$arch_version"
    implementation "android.arch.lifecycle:common-java8:$arch_version"

    // LiveData and ViewModel
    implementation "android.arch.lifecycle:extensions:$arch_version"

    // Room
    implementation 'android.arch.persistence.room:runtime:1.0.0'
    kapt "android.arch.persistence.room:compiler:1.0.0"
    implementation 'android.arch.persistence.room:rxjava2:1.0.0'

    // fabric
    implementation('com.crashlytics.sdk.android:crashlytics:2.8.0@aar') {
        transitive = true
    }

    // Dagger 2
    implementation 'com.google.dagger:dagger:2.13'
    kapt 'com.google.dagger:dagger-compiler:2.13'

    //    implementation 'com.google.dagger:dagger-android:2.13'

    //    implementation 'com.google.dagger:dagger-android-support:2.13'

    //    annotationProcessor 'com.google.dagger:dagger-android-processor:2.13'
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
}


afterEvaluate {
    initFabricPropertiesIfNeeded()
}

def initFabricPropertiesIfNeeded() {
    def propertiesFile = file('fabric.properties')
    if (!propertiesFile.exists()) {
        def commentMessage = "This is autogenerated fabric property from system environment to prevent key to be committed to source control."
        ant.propertyfile(file: "fabric.properties", comment: commentMessage) {
            entry(key: "apiSecret", value: crashlyticsApiSecret)
            entry(key: "apiKey", value: crashlyticsApiKey)
        }
    }
}